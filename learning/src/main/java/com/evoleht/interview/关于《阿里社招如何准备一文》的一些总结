
1、主语言本身以及它的高级特性。
1）Java的数据结构相关的类实现原理，比如LinkedList，ArrayList，HashMap，TreeMap这一类的。以下简单模拟一个数据结构的连环炮。

HashMap是不是有序的?
HashMap是根据key的hash值去查找存放数据，不能保证输入的顺序和根据Iterator变量出来的顺序一致。

有没有有顺序的Map实现类？

TreeMap，LinkedHashMap

TreeMap和LinkedHashMap是如何保证它的顺序的？

TreeMap采用的是红黑树。它是一种有序的二叉树结构
LikedHashMap 是hashmap 与 双向链表的形式， 可以设置按插入顺序排序还是按最近访问顺序排序

你觉得它们两个哪个的有序实现比较好？


你觉得还有没有比它更好或者更高效的实现方式？

2）Java并发包当中的类，它们都有哪些作用，以及它们的实现原理，这些类就是java.concurrent包下面的。与上面一样，咱们也简单的模拟一个并发包的连环炮。

如果想实现所有的线程一起等待某个事件的发生，当某个事件发生时，所有线程一起开始往下执行的话，有什么好的办法吗？

你知道它的实现原理吗？

你还知道其它的实现方式吗？

你觉得这些方式里哪个方式更好？

如果让你来写的话，你觉得还有比它更好的实现方式吗？

3）IO包和NIO包中的内容。这部分里面NIO会是重点，IO包大部分都会比较熟悉，因此可能会直接略过，直接问你NIO的内容。

IO包和NIO包的内容相对来说不是很多，首先NIO模型要熟悉，特别是其中的selector一定要非常清楚它的职责和实现原理。其实NIO的核心是IO线程池，
一定要记住这个关键点。有的时候，面试官可能也会问你IO包的设计模式（装饰器模式），为什么要这样设计？

　4）Java的虚拟机的内容。这部分主要包括三部分，GC、类加载机制，以及内存。

　　一个GC部分简单的连环炮。

　　面试官可以先问你什么时候一个对象会被GC？

　　接着继续问你为什么要在这种时候对象才会被GC？

　　接着继续问你GC策略都有哪些分类？

　　你如果说出来了，继续问你这些策略分别都有什么优劣势？都适用于什么场景？

　　你继续说出来了以后，给你举个实际的场景，让你选择一个GC策略？

　　你如果选出来了，继续问你，为什么要选择这个策略？

　　下面是关于类加载机制的简单连环炮。

　　首先肯定是先问你Java的类加载器都有哪些？

　　回答了这些以后，可能会问你每个类加载器都加载哪些类？

　　说完以后，可能会问你这些类加载之间的父子关系是怎样的？

　　你在回答的时候可能会提到双亲委派模型，那么可以继续问你什么是双亲委派模型？

　　你解释完了以后，可能会继续问你，为什么Java的类加载器要使用双亲委派模型？

　　你回答完以后，可能会继续问你如何自定义自己的类加载器，自己的类加载器和Java自带的类加载器关系如何处理？

　　再来一个关于内存的连环炮。

　　首先肯定就是问你内存分为哪几部分，这些部分分别都存储哪些数据？

　　然后继续问你一个对象从创建到销毁都是怎么在这些部分里存活和转移的？

　　接着可能会问你，内存的哪些部分会参与GC的回收？

　　完事以后，可能还会问你Java的内存模型是怎么设计的？

　　你回答了以后，还会继续问你为什么要这么设计？

　　问完以后，还可能会让你结合内存模型的设计谈谈volatile关键字的作用？


