
事务中使用混合存储引擎

1.如果在一个事务中使用了InnoDB、MyIASM两种存储引擎的表，
则如果事务发生回滚，InnoDB可以正常回滚，MyIASM中的数据无法回滚。
因为，InnoDB支持事务，MyIASM不支持事务

2.InnoDB采用的是两阶段锁协议。在事务执行过程中，随时都可以锁定，锁只有在执行commit或rollback时，才会释放，并且所有的锁都是同一时间被释放。
这种锁是隐式锁，InnoDB会根据隔离级别在需要的时候自动加锁。

InnoDB也支持通过语句显示的加锁。
S：select *  lock in share mode；
X：select *  for update


3.myisam:
不支持事务，不支持崩溃之后的安全恢复。
存储： MyISAM 会将表存储在两个文件中：数据文件和索引文件。

特性:
	加锁与并发：MyISAM对整张表加锁，而不是针对行。读取时会对需要读到的所有表加共享锁，
	写入时则对表加排它锁。但是在表有读取查询的同时，也可以往表中插入新的记录（并发插入， concurrent insert）
	索引： 支持全文索引。即使是BLOB和TEXT等长字段，也可以基于前500个字符创建索引。
	


索引：
1.独立的列。是指索引不能是表达式的一部分，也不能是函数的参数。
例： select actor_id form actor where actor_id +1 = 5;//查询无法使用actor_id列的索引
select ...where to_days(CURRENT_DATE) - TO_DAYS(date_cole) <=10;

2.多列索引，将使用次数多的放于最左侧



聚集索引：
聚集索引并不是一个单独的索引类型，而是一种存储方式。
InnoDB 的聚集索引实际上在同一个结构中保存了B-Tree索引和数据行。

当表中有聚集索引时，它的数据实际上存放在索引的叶子页中


如果一个索引包含（或者说覆盖）所有需要查询的字段的值，我们就称之为“覆盖索引”












